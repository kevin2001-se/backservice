package com.servicios.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.servicios.model.Archivo;
import com.servicios.services.ArchivoService;
import com.servicios.services.FileServiceApi;

@RestController
@RequestMapping("/api/archivo")
@CrossOrigin(origins = "http://localhost:4200")
public class ArchivoController {

	@Autowired
	private ArchivoService service;
	@Autowired
	private FileServiceApi fileServiceAPI;
	
	@GetMapping
	@ResponseBody
	public ResponseEntity<List<Archivo>> listarArchivoXUsuario(@RequestParam(value = "id", required = false, defaultValue = "") int id){
		List<Archivo> lista = service.listarArchivosXUsuario(id);
		return ResponseEntity.ok(lista);
	}
	
	@PostMapping
	@ResponseBody
	public ResponseEntity<Map<String, Object>> registrarArchivo(@RequestBody Archivo archivo){
		
		Map<String, Object> salida = new HashMap<String, Object>();
		
		try {
			
			Archivo obj = service.registrarArchivo(archivo);
			
			if (obj == null) {
				salida.put("mensaje", "No se pudo registrar");
			}else {
				salida.put("mensaje", "Archivo registrado Correctamente");
			}
			
		} catch (Exception e) {
			salida.put("mensaje", "No se pudo registrar, Error");
		}
		
		return ResponseEntity.ok(salida);
		
	}
	
	@DeleteMapping("/eliminar/{id}")
	public void eliminarFile(@PathVariable int id) throws Exception{
		
		try {
			Archivo obj = service.buscarArchivo(id);
			
			if (obj.getNombre().isEmpty() == false) {
				service.eliminarArchivo(id);
				fileServiceAPI.eliminar(obj.getNombre());
			}
		} catch (Exception e) {
			// TODO: handle exception
		}
		
		
	}
	
}
